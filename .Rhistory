mean20to60
sum51to91
otdivisible <- Filter(function(i) { all(i %% c(3, 5, 7) != 0) }, seq(1, 100))
notdivisible
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)  # Output: "R version 4.4.1 (2024-06-14 ucrt)"
print(a, na.print="-999")
newage <- c(age, 0, age)
newage
newage <- c(age, 0, age)
newage
sortedage <- sort(age)
sortedage
minage <- min(age)
maxage <- max(age)
minage
maxage
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)  # Output: "R version 4.4.1 (2024-06-14 ucrt)"
minage <- min(age)
maxage <- max(age)
minage
maxage
data <- c(2.4, 2.8, 2.1, 2.5, 2.4, 2.2, 2.5, 2.3, 2.5, 2.3, 2.4, 2.7)
length(data)
doubleddata <- data * 2
doubleddata
seq1to100 <- seq(1, 100)
seq20to60 <- seq(20, 60)
mean20to60 <- mean(seq(20, 60))
sum51to91 <- sum(seq(51, 91))
seq1to1000 <- seq(1, 1000)
length(seq1to100)
length(seq20to60)
length(mean20to60)
length(sum51to91)
seq1to100
seq20to60
mean20to60
sum51to91
seq1to1000max10 <- seq(1, 10)
seq1to1000max10
otdivisible <- Filter(function(i) { all(i %% c(3, 5, 7) != 0) }, seq(1, 100))
notdivisible
backwardseq <- seq(100, 1)
backwardseq
multiples3or5 <- Filter(function(x) x %% 3 == 0 | x %% 5 == 0, seq(1, 24))
summultiples <- sum(multiples3or5)
multiples3or5
summultiples
length(multiples3or5)
score <- c(72, 86, 92, 63, 88, 89, 91, 92, 75, 75, 77)
x2 <- score[2]
x3 <- score[3]
x2
x3
print(a, na.print="-999")
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)  # Output: "R version 4.4.1 (2024-06-14 ucrt)"
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29,
35, 31, 27, 22, 37, 34, 19, 20, 57, 49,
50, 37, 46, 25, 17, 37, 42, 53, 41, 51,
35, 24, 33, 41)
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29,
35, 31, 27, 22, 37, 34, 19, 20, 57, 49,
50, 37, 46, 25, 17, 37, 42, 53, 41, 51,
35, 24, 33, 41)
length(age)
reciprocalage <- 1 / age
reciprocalage
newage <- c(age, 0, age)
newage
sortedage <- sort(age)
sortedage
minage <- min(age)
maxage <- max(age)
minage
maxage
data <- c(2.4, 2.8, 2.1, 2.5, 2.4, 2.2, 2.5, 2.3, 2.5, 2.3, 2.4, 2.7)
length(data)
doubleddata <- data * 2
doubleddata
seq1to100 <- seq(1, 100)
seq20to60 <- seq(20, 60)
mean20to60 <- mean(seq(20, 60))
sum51to91 <- sum(seq(51, 91))
seq1to1000 <- seq(1, 1000)
length(seq1to100)
length(seq20to60)
length(mean20to60)
length(sum51to91)
seq1to100
seq20to60
mean20to60
sum51to91
seq1to1000max10 <- seq(1, 10)
seq1to1000max10
otdivisible <- Filter(function(i) { all(i %% c(3, 5, 7) != 0) }, seq(1, 100))
notdivisible
backwardseq <- seq(100, 1)
backwardseq
multiples3or5 <- Filter(function(x) x %% 3 == 0 | x %% 5 == 0, seq(1, 24))
summultiples <- sum(multiples3or5)
multiples3or5
summultiples
length(multiples3or5)
score <- c(72, 86, 92, 63, 88, 89, 91, 92, 75, 75, 77)
x2 <- score[2]
x3 <- score[3]
x2
x3
print(a, na.print="-999")
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)
respondents_data <- data.frame(
Respondents = 1:20,
Sex = c(2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2),
Fathers_Occupation = c(1, 3, 3, 3, 1, 2, 3, 1, 1, 1, 3, 2, 1, 3, 3, 1, 3, 1, 2, 1),
Persons_at_Home = c(5, 7, 8, 3, 8, 5, 9, 6, 7, 8, 4, 7, 5, 4, 7, 8, 8, 3, 3, 6),
Siblings_at_School = c(6, 4, 4, 1, 2, 1, 5, 3, 1, 2, 3, 2, 5, 5, 2, 1, 2, 5, 3, 2),
Types_of_Houses = c(1, 2, 3, 1, 1, 3, 3, 1, 2, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 2)
)
print(respondents_data)
str(respondents_data)
summary(respondents_data)
mean_siblings <- mean(respondents_data$Siblings_at_School)
mean_siblings
# Extract the first two rows and all columns
first_two_rows <- respondents_data[1:2, ]
first_two_rows
extracted_rows <- respondents_data[c(3, 5), c(2, 4)]
extracted_rows
types_houses <- respondents_data$Types_of_Houses
types_houses
males_farmers <- respondents_data[respondents_data$Sex == 1 & respondents_data$Fathers_Occupation == 1, ]
males_farmers
females_with_siblings <- respondents_data[respondents_data$Sex == 2 & respondents_data$Siblings_at_School >= 5, ]
females_with_siblings
df = data.frame(Ints=integer(),
Doubles=double(), Characters=character(),
Logicals=logical(),
Factors=factor(),
stringsAsFactors=FALSE)
print("Structure of the empty dataframe:")
print(str(df))
household_data <- read.csv("~/DataScience/CS101/worksheet3B/HouseholdsData.csv")
household_data <- read.csv("~/BERNASOL/Worksheet3/HouseholdsData.csv")
household_data <- read.csv("/BERNASOL/Worksheet3/HouseholdsData.csv")
household_data <- read.csv("BERNASOL/Worksheet3/HouseholdData.csv")
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29,
35, 31, 27, 22, 37, 34, 19, 20, 57, 49,
50, 37, 46, 25, 17, 37, 42, 53, 41, 51,
35, 24, 33, 41)
length(age)
reciprocalage <- 1 / age
reciprocalage
newage <- c(age, 0, age)
newage
sortedage <- sort(age)
sortedage
minage <- min(age)
maxage <- max(age)
minage
maxage
data <- c(2.4, 2.8, 2.1, 2.5, 2.4, 2.2, 2.5, 2.3, 2.5, 2.3, 2.4, 2.7)
length(data)
doubleddata <- data * 2
doubleddata
seq1to100 <- seq(1, 100)
seq20to60 <- seq(20, 60)
mean20to60 <- mean(seq(20, 60))
sum51to91 <- sum(seq(51, 91))
seq1to1000 <- seq(1, 1000)
length(seq1to100)
length(seq20to60)
length(mean20to60)
length(sum51to91)
seq1to100
seq20to60
mean20to60
sum51to91
seq1to1000max10 <- seq(1, 10)
seq1to1000max10
notdivisible <- Filter(function(i) { all(i %% c(3, 5, 7) != 0) }, seq(1, 100))
notdivisible
backwardseq <- seq(100, 1)
backwardseq
multiples3or5 <- Filter(function(x) x %% 3 == 0 | x %% 5 == 0, seq(1, 24))
summultiples <- sum(multiples3or5)
multiples3or5
summultiples
length(multiples3or5)
score <- c(72, 86, 92, 63, 88, 89, 91, 92, 75, 75, 77)
x2 <- score[2]
x3 <- score[3]
x2
x3
a <- c(1, 2, NA, 4, NA, 6, 7)
# a. Change NA to 999
print(a, na.print="-999")
a <- c(1, 2, NA, 4, NA, 6, 7)
# a. Change NA to 999
print(a, na.print="-999")
name <- readline(prompt="Input your name: ")
age <- readline(prompt="Input your age: ")
print(paste("My name is", name, "and I am", age, "years old."))
print(R.version.string)
household_data <- read.csv("/BERNASOL/WORKSHEET3/HouseholdData.csv")
head(household_data)
unique(household_data$Sex)
household_data$Sex <- ifelse(tolower(household_data$Sex) == "male", 1,
ifelse(tolower(household_data$Sex) == "female", 2, NA))
household_data$Sex <- factor(household_data$Sex, levels = c(1, 2), labels = c("Male", "Female"))
head(household_data)
unique(household_data$Sex)
unique(household_data$Sex)
household_data$Sex <- ifelse(tolower(household_data$Sex) == "male", 1,
ifelse(tolower(household_data$Sex) == "female", 2, NA))
household_data$Sex <- factor(household_data$Sex, levels = c(1, 2), labels = c("Male", "Female"))
head(household_data)
unique(household_data$Sex)
str(household_data)
head(household_data)
unique(household_data$Types_of_Houses)
if ("Types_of_Houses" %in% names(household_data)) {
household_data$Types_of_Houses <- factor(household_data$Types_of_Houses,
levels = c("Wood", "Concrete", "Semi-Concret"),
labels = c(1, 2, 3))
household_data$Types_of_Houses <- as.integer(household_data$Types_of_Houses)
print(head(household_data))
} else {
print("The column 'Types_of_Houses' does not exist in the data frame.")
}
str(household_data)
head(household_data)
names(household_data)[names(household_data) == "Fathers Occupation"] <- "Fathers_Occupation"
names(household_data)
if ("Fathers_Occupation" %in% names(household_data)) {
household_data$Fathers_Occupation <- factor(household_data$Fathers_Occupation,
levels = c("Farmer", "Driver", "Others"),
labels = c(1, 2, 3))
household_data$Fathers_Occupation <- as.integer(household_data$Fathers_Occupation)
print(head(household_data))
} else {
print("The column 'Fathers_Occupation' still does not exist in the data frame.")
}
str(household_data)
names(household_data)
head(household_data)
females_with_driver_father <- subset(household_data, Sex == "Female" & `Fathers.Occupation` == "Driver")
# Check the structure of the data frame
str(household_data)
# Check the column names in the data frame
names(household_data)
# Adjusting to the correct column name
respondents_with_5_siblings <- subset(household_data, Siblings.at.Home >= 5)
# Check the structure of the data frame
str(household_data)
# Check the column names in the data frame
names(household_data)
# Adjusting to the correct column name
respondents_with_5_siblings <- subset(household_data, Siblings.at.Home >= 5)
shoe_size <- c(8, 9, 10, 11, 12)
height <- c(170, 175, 180, 185, 190)
gender <- c("M", "F", "M", "F", "M")
df <- data.frame(shoe_size, height, gender)
weighted.mean(price_per_liter, purchase_quantity)
print(length(vegetables))
first11 <- LETTERS[1:11]
print(first11)
oddLetters <- LETTERS[seq(1, 26, by = 2)]
print(oddLetters)
vowels <- LETTERS[c(1, 5, 9, 15, 21)]
print(vowels)
last5 <- letters[22:26]
print(last5)
midLetters <- letters[15:24]
print(midLetters)
city <- c("Tuguegarao City", "Manila", "Iloilo City", "Tacloban", "Samal Island", "Davao City")
print(city)
temp <- c(42, 39, 34, 34, 30, 27)
print(temp)
city_temp <- data.frame(City = city, Temperature = temp)
print(city_temp)
city_temp <- data.frame(City = city, Temperature = temp)
print(city_temp)
names(city_temp) <- c("City", "Temperature")
print(city_temp)
str(city_temp)
print(city_temp[3:4, ])
hottest <- city_temp[which.max(city_temp$Temperature), ]
coldest <- city_temp[which.min(city_temp$Temperature), ]
print(hottest)
print(coldest)
mat <- matrix(c(1:8, 11:14), nrow = 3, ncol = 4)
print(mat)
mat2 <- mat * 2
print(mat2)
print(mat2[2, ])
print(mat2[1:2, 3:4])
print(mat2[3, 2:3])
print(mat2[, 4])
rownames(mat2) <- c("isa", "dalawa", "tatlo")
colnames(mat2) <- c("uno", "dos", "tres", "quatro")
print(mat2)
dim(mat) <- c(6, 2)
print(mat)
arr <- array(rep(c(1, 2, 3, 6, 7, 8, 9, 0, 3, 4, 5, 1), each = 2), dim = c(2, 4, 3))
print(arr)
print(dim(arr))
dimnames(arr) <- list(letters[1:2], LETTERS[1:4], c("1st-Dimensional Array", "2nd-Dimensional Array", "3rd-Dimensional Array"))
print(arr)
shoe_size <- c(8, 9, 10, 11, 12)
height <- c(170, 175, 180, 185, 190)
gender <- c("M", "F", "M", "F", "M")
df <- data.frame(shoe_size, height, gender)
data <- data.frame(
Shoe_Size = c(6.5, 9.0, 8.5, 8.5, 10.5, 7.0, 9.5, 9.0, 13.0, 7.5, 10.5, 8.5, 12.0, 10.5, 13.0, 11.5, 8.5, 5.0, 10.0, 6.5, 7.5, 8.5, 10.5, 8.5, 10.5, 11.0, 9.0, 13.0),
Height = c(66.0, 68.0, 64.5, 65.0, 70.0, 64.0, 70.0, 71.0, 72.0, 64.0, 74.75, 67.0, 71.0, 71.0, 77.0, 72.0, 59.0, 62.0, 72.0, 66.0, 64.0, 67.0, 73.0, 69.0, 72.0, 70.0, 69.0, 70.0),
Gender = c("F", "F", "F", "F", "M", "F", "F", "F", "M", "F", "M", "F", "M", "M", "M", "M", "F", "F", "M", "F", "F", "M", "M", "F", "M", "M", "M", "M")
)
data
shoe_size <- c(8, 9, 10, 11, 12)
height <- c(170, 175, 180, 185, 190)
gender <- c("M", "F", "M", "F", "M")
df <- data.frame(shoe_size, height, gender)
fuel_data <- data.frame(
price_per_liter = c(1.20, 1.15, 1.25, 1.10),
purchase_quantity = c(50, 75, 30, 40)
)
data <- c(length(rivers), sum(rivers), mean(rivers), median(rivers), var(rivers),
sd(rivers), min(rivers), max(rivers))
data
names <- c("Oprah Winfrey", "Tiger Woods", "Angelina Jolie", "Beyonce Knowles", "David Beckham",
"J.K. Rowling", "Brad Pitt", "Johnny Depp", "Jay-Z", "Kobe Bryant")
ranking <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
pay <- c(275, 105, 20, 87, 40, 300, 31, 92, 63, 45)
data <- data.frame(names, ranking, pay)
data
data$ranking[2] <- 15
data$pay[2] <- 90
data
write.csv(data, "PowerRanking.csv")
data <- read.csv("PowerRanking.csv")
subset_data <- data[10:20, ]
save(subset_data, file = "Ranks.RData")
data <- read.csv("PowerRanking.csv")
subset_data <- data[10:20, ]
save(subset_data, file = "Ranks.RData")
library(readxl)
hotels_data <- read_excel("C:\\Users\\Acer\\Downloads\\hotels-vienna.xlsx")
options(repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("readxl")
library(readxl)
hotel_data <- read_excel("/BERNASOL/WORKSHEET2/hotels-vienna.xlsx")
hotel_data
dim(hotels_data)
selected_hotels <- hotels_data[, c("country", "neighbourhood", "price", "stars", "accommodation_type", "rating")]
print(selected_hotels)
save(selected_hotels, file = "new.RData")
print(head(selected_hotels))
print(tail(selected_hotels))
vegetables <- c("Carrot", "Broccoli", "Spinach", "Tomato", "Cucumber", "Pepper", "Onion", "Garlic", "Potato", "Lettuce")
print(vegetables)
vegetables <- c(vegetables, "Pumpkin", "Zucchini")
print(vegetables)
vegetables <- append(vegetables, c("Eggplant", "Radish", "Mushroom", "Beetroot"), after = 5)
print(vegetables)
print(length(vegetables))
vegetables <- vegetables[-c(5, 10, 15)]
print(vegetables)
print(length(vegetables))
x_seq <- -3:2
x_seq[2] <- 0
x_seq
seq_vector <- -5:5
seq_vector
# Check the structure of the data frame
str(household_data)
# Check the column names in the data frame
names(household_data)
# Adjusting to the correct column name
respondents_with_5_siblings <- subset(household_data, Siblings.at.Home >= 5)
# Check the structure of the data frame
str(household_data)
# Check the column names in the data frame
names(household_data)
# Adjusting to the correct column name
respondents_with_5_siblings <- subset(household_data, `Siblings at Home` >= 5)
# Check the structure of the data frame
str(household_data)
# Check the column names in the data frame
names(household_data)
# Adjusting to the correct column name
respondents_with_5_siblings <- subset(household_data, `Siblings at Home` >= 5)
str(household_data)
names(household_data)
head(household_data)
females_with_driver_father <- subset(household_data, Sex == "Female" & `Fathers.Occupation` == "Driver")
plot(c(1,8), c(1:10),c(1,10))
plot(c(1:10))
plot(c(1:10, type="1"))
plot(c(1,10), c(1:10, type="1"))
plot(c(1:10, type="1"))
plot(1:10, type="1"))
plot(1:10, type="1")
#plot
plot(1:10 , type="1")
#plot
plot(c(1:10) , type="1")
#plot
plot(c(1:10), type="L")
#plot
plot(1:10, type="L")
plot(1:10, type="L")
data <- read.csv("PowerRanking.csv")
subset_data <- data[10:20, ]
save(subset_data, file = "Ranks.RData")
#plot
plot(1:10, type = "1")
#plot
plot(1:10)
#plot
plot(1:10 , cex= 2)
#color
plot(1:10, col= "red")
plot(x, y)
#scatter plot
x<-c(1, 2, 3, 4, 5)
#add labels
plot(x, y, main = "SHANE BERNASOL")
#add labels
plot(x, y, (main = "SHANE BERNASOL")
#add labels
plot(x, y, (main = "SHANE BERNASOL"))
#add labels
plot(x,y , main = "SHANE BERNASOL")
#add labels
plot(x,y  main = "SHANE BERNASOL")
#add labels
plot(x, y  main = "SHANE BERNASOL")
#add labels
plot(x, y,  main = "SHANE BERNASOL")
pie(x, init.angle = 90)
pie(x, init.angle = 45)
pie(x, init.angle = 90)
pie(x, label = mylabel, main = "LETTERS")
mylabel <- c("a","b","c","d")
pie(x, label = mylabel, main = "LETTERS")
setwd("C:/WORKSHEETS")
LETTERS
first_11_letters <- LETTERS[1:11]
first_11_letters
odd_letters <- LETTERS[seq(1, length(LETTERS), by=2)]
odd_letters
vowels <- LETTERS[c(1, 5, 9, 15, 21)]
vowels
last_5_lowercase <- letters[22:26]
last_5_lowercase
vowels <- LETTERS[c(1, 5, 9, 15, 21)]
vowels
mid_lowercase <- letters[15:24]
mid_lowercase
city <- c("Tuguegarao City", "Manila", "Iloilo City", "Tacloban", "Samal Island", "Davao City")
city
temp <- c(42, 39, 34, 34, 30, 27)
temp
weather_df <- data.frame(City = city, Temperature = temp)
weather_df
names(weather_df) <- c("City", "Temperature")
weather_df
str(weather_df)
row_3_4 <- weather_df[3:4, ]
row_3_4
highest_temp <- weather_df[which.max(weather_df$Temperature), ]
lowest_temp <- weather_df[which.min(weather_df$Temperature), ]
highest_temp
lowest_temp
matrix1 <- matrix(c(1:8, 11:14), ncol = 4, byrow = TRUE)
matrix1
matrix_multiplied <- matrix1 * 2
matrix_multiplied
row_2 <- matrix1[2, ]
row_2
cols_3_4_rows_1_2 <- matrix1[1:2, 3:4]
cols_3_4_rows_1_2
cols_2_3_row_3 <- matrix1[3, 2:3]
cols_2_3_row_3
col_4 <- matrix1[, 4]
col_4
dimnames(matrix_multiplied) <- list(c("isa", "dalawa", "tatlo"), c("uno", "dos", "tres", "quatro"))
matrix_multiplied
dim(matrix1) <- c(6, 2)
matrix1
values <- c(1, 2, 3, 6, 7, 8, 9, 0, 3, 4, 5, 1)
array_data <- array(rep(values, each = 2), dim = c(2, 4, 3))
array_data
dim(array_data)
dimnames(array_data) <- list(letters[1:2], LETTERS[1:4], c("1st-Dimensional Array", "2nd-Dimensional Array", "3rd-Dimensional Array"))
array_data
